<!-- 
    ROS navigation stack with velocity smoother and safety (reactive) controller
-->
<launch>
  <arg name="gui"        default="true"/>
  <arg name="world_file" default="$(find turtlebot_gazebo)/worlds/playground.world"/>
  <arg name="init_pose" value="-x -13 -y -13 -z 0"/>

  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>


  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
        <arg name="init_pose" value="$(arg init_pose)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="10.0" />
  </node>
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="$(find octomap_server)/scripts/my_octomap3.bt">

    <param name="resolution" value="0.05" />
    <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
    <param name="frame_id" type="string" value="map" />
    <!-- maximum range to integrate (speedup!) -->
    <param name="sensor_model/max_range" value="30.0" />
    <param name="latch" value="true"/>
    <param name="pointcloud_min_z" value="-200.0"/>
    <param name="pointcloud_max_z" value="200.0"/>
    <!-- data source to integrate (PointCloud2) -->
    <remap from="cloud_in" to="/camera/depth/points" />
    <param name="pointcloud_min_z" value="-200.0"/>
    <param name="pointcloud_max_z" value="200.0"/>
    <param name="occupancy_min_z" value="0.02"/>
    <param name="occupancy_max_z" value="15"/>               
  </node>
      <!--node pkg="tf" type="static_transform_publisher" name="foot_print_to_base" args="0 0 0 0 0 0 1 /odom /base_footprint 100" /-->
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.1"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>


  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_gazebo)/rviz/fake_laser.rviz"/>
  <!--node pkg="tf" type="static_transform_publisher" name="foot_print_to_base" args="0 0 0 0 0 0 1 /map /odom 100" /-->
  <include file="$(find turtlebot_navigation)/launch/ekf_localization.launch">

  </include>
    

  <!--node name="foo_throttler" type="throttle" pkg="topic_tools" args="messages /tf 30 /tf" /-->

    
</launch>
